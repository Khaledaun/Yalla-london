
name: Staging Deployment & Validation

on:
  push:
    branches: [develop, staging]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  STAGING_URL: ${{ secrets.STAGING_URL }}
  DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL || secrets.DATABASE_URL }}
  NEXTAUTH_SECRET: ${{ secrets.STAGING_NEXTAUTH_SECRET || secrets.NEXTAUTH_SECRET }}
  ABACUSAI_API_KEY: ${{ secrets.STAGING_ABACUSAI_API_KEY || secrets.ABACUSAI_API_KEY }}

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug - Check staging deployment secrets
        run: |
          echo "üîê Checking staging deployment secrets availability..."
          echo "VERCEL_TOKEN: $([[ -n "${{ secrets.VERCEL_TOKEN }}" ]] && echo "‚úÖ yes" || echo "‚ùå no - REQUIRED")"
          echo "VERCEL_ORG_ID: $([[ -n "${{ secrets.VERCEL_ORG_ID }}" ]] && echo "‚úÖ yes" || echo "‚ùå no - REQUIRED")"
          echo "VERCEL_PROJECT_ID: $([[ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]] && echo "‚úÖ yes" || echo "‚ùå no - REQUIRED")"
          echo "DATABASE_URL: $([[ -n "${{ env.DATABASE_URL }}" ]] && echo "‚úÖ configured" || echo "‚ùå not configured")"
          echo "LHCI_GITHUB_APP_TOKEN: $([[ -n "${{ secrets.LHCI_GITHUB_APP_TOKEN }}" ]] && echo "‚úÖ yes" || echo "‚ùå no (optional)")"
          echo ""
          
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
      
      - run: yarn install --frozen-lockfile
      - run: yarn tsc --noEmit
      - run: yarn lint
      
  build-and-test:
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          
      - run: yarn install --frozen-lockfile
      - run: yarn build
      
      # Lighthouse CI for performance validation
      - run: npm install -g @lhci/cli@0.12.x
      - run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ env.STAGING_URL }}
          ABACUSAI_API_KEY: ${{ env.ABACUSAI_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID || "test" }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY || "test" }}
          AWS_BUCKET_NAME: ${{ secrets.STAGING_AWS_BUCKET_NAME || "staging-bucket" }}
          AWS_REGION: ${{ secrets.AWS_REGION || "us-east-1" }}
          
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v4
      - uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
      # Post-deployment validation
      - name: Smoke Test Staging
        run: |
          curl -f ${{ env.STAGING_URL }}/api/health || exit 1
          curl -f ${{ env.STAGING_URL }}/api/social-embeds || exit 1
          curl -f ${{ env.STAGING_URL }}/api/media || exit 1
          curl -f ${{ env.STAGING_URL }}/api/homepage-blocks || exit 1

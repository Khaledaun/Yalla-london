name: Test CI/CD Failure Detection

on:
  workflow_dispatch:
    inputs:
      simulate_failure:
        description: 'Job to simulate failure (test-job-1, test-job-2, test-job-3)'
        required: false
        default: 'none'
      simulate_skip:
        description: 'Job to simulate skip (test-job-1, test-job-2, test-job-3)'
        required: false
        default: 'none'

env:
  SIMULATE_FAILURE: ${{ github.event.inputs.simulate_failure || 'none' }}
  SIMULATE_SKIP: ${{ github.event.inputs.simulate_skip || 'none' }}

jobs:
  test-job-1:
    name: Test Job 1 (Critical)
    runs-on: ubuntu-latest
    if: env.SIMULATE_SKIP != 'test-job-1'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Simulate work
        run: |
          echo "Running test job 1..."
          sleep 2
          
      - name: Simulate failure if requested
        run: |
          if [ "${{ env.SIMULATE_FAILURE }}" == "test-job-1" ]; then
            echo "❌ Simulating failure in test-job-1"
            exit 1
          fi
          echo "✅ Test job 1 completed successfully"

  test-job-2:
    name: Test Job 2 (Critical)
    runs-on: ubuntu-latest
    if: env.SIMULATE_SKIP != 'test-job-2'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Simulate work
        run: |
          echo "Running test job 2..."
          sleep 2
          
      - name: Simulate failure if requested
        run: |
          if [ "${{ env.SIMULATE_FAILURE }}" == "test-job-2" ]; then
            echo "❌ Simulating failure in test-job-2"
            exit 1
          fi
          echo "✅ Test job 2 completed successfully"

  test-job-3:
    name: Test Job 3 (Non-Critical)
    runs-on: ubuntu-latest
    if: env.SIMULATE_SKIP != 'test-job-3'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Simulate work
        run: |
          echo "Running test job 3 (non-critical)..."
          sleep 2
          
      - name: Simulate failure if requested
        run: |
          if [ "${{ env.SIMULATE_FAILURE }}" == "test-job-3" ]; then
            echo "❌ Simulating failure in test-job-3"
            exit 1
          fi
          echo "✅ Test job 3 completed successfully"

  detect-test-failures:
    name: Detect Test Failures
    runs-on: ubuntu-latest
    needs: [test-job-1, test-job-2, test-job-3]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Detect failures in test workflow
        id: test-failure-detector
        uses: ./.github/actions/failure-detector
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          workflow-name: 'Test CI/CD Failure Detection'
          run-id: ${{ github.run_id }}
          critical-jobs: 'test-job-1,test-job-2'  # Only job 1 and 2 are critical
          
      - name: Add test results summary
        run: |
          echo "## 🧪 Test Failure Detection Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Configuration:**" >> $GITHUB_STEP_SUMMARY
          echo "- Simulated Failure: ${{ env.SIMULATE_FAILURE }}" >> $GITHUB_STEP_SUMMARY
          echo "- Simulated Skip: ${{ env.SIMULATE_SKIP }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Results:**" >> $GITHUB_STEP_SUMMARY
          echo "- Test Job 1: ${{ needs.test-job-1.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test Job 2: ${{ needs.test-job-2.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test Job 3: ${{ needs.test-job-3.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.test-failure-detector.outputs.issue-created }}" == "true" ]; then
            echo "🚨 **Issue created for critical failure/skip!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📝 **Issue URL:** ${{ steps.test-failure-detector.outputs.issue-url }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No issues created - no critical failures/skips detected**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** Only test-job-1 and test-job-2 are configured as critical jobs." >> $GITHUB_STEP_SUMMARY